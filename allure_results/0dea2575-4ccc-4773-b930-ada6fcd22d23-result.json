{"name": "Тест закрытия всплывающего окна", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_main_functionality.TestsMainFunctionality object at 0x000001ED9B578410>, driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"e8df0034-40a4-4bb5-8119-70a41410a147\")>\n\n    @allure.title('Тест закрытия всплывающего окна')\n    def test_pop_up_window_close(self, driver):\n        main_functionality_page = MainFunctionalityPage(driver)\n        main_functionality_page.transition_site(Url.BASE_URL)\n        main_functionality_page.click_to_ingredient()\n        main_functionality_page.click_button_close_pop_up_window()\n>       result = main_functionality_page.pop_up_window_get_class()\n\ntests\\test_main_functionality.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\main_functionality_page.py:30: in pop_up_window_get_class\n    return self.get_attribute(MainFunctionalityLocators.POP_UP_WINDOW_CLOSE, \"class\")\npages\\base_page.py:36: in get_attribute\n    return WebDriverWait(self.driver, time).until(ec.element_to_be_clickable(locator)).get_attribute(attribute)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e8df0034-40a4-4bb5-8119-70a41410a147\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x000001ED9B624040>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "steps": [{"name": "Клик по ингредиенту", "status": "passed", "start": 1709397386517, "stop": 1709397387357}, {"name": "Клик по кнопке закрытия всплывающего окна", "status": "passed", "start": 1709397387357, "stop": 1709397387592}, {"name": "Получение класса закрытого всплывающего окна", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"C:\\Users\\selez\\PycharmProjects\\Diplom\\Diplom_3\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\selez\\PycharmProjects\\Diplom\\Diplom_3\\pages\\main_functionality_page.py\", line 30, in pop_up_window_get_class\n    return self.get_attribute(MainFunctionalityLocators.POP_UP_WINDOW_CLOSE, \"class\")\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\selez\\PycharmProjects\\Diplom\\Diplom_3\\pages\\base_page.py\", line 36, in get_attribute\n    return WebDriverWait(self.driver, time).until(ec.element_to_be_clickable(locator)).get_attribute(attribute)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\selez\\PycharmProjects\\Diplom\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1709397387593, "stop": 1709397397802}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1709397385638, "stop": 1709397397802, "uuid": "75797a15-645e-45dc-9075-66c4673011ed", "historyId": "e97c4b5e9de47b55e99db452407b3e3a", "testCaseId": "6d9285cee04bb1552ac2b467744026f3", "fullName": "tests.test_main_functionality.TestsMainFunctionality#test_pop_up_window_close", "labels": [{"name": "story", "value": "Тесты основного функционала"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main_functionality"}, {"name": "subSuite", "value": "TestsMainFunctionality"}, {"name": "host", "value": "Asus"}, {"name": "thread", "value": "18896-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main_functionality"}]}